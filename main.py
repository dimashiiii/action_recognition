import torch
from torch.utils.data import DataLoader
from dataset import KeypointsDataset  

def main():
    dataset = KeypointsDataset(root_dir="keypoints_data", max_frames=60)
    dataloader = DataLoader(dataset, batch_size=4, shuffle=True)

    print(f"üîç –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—ç–º–ø–ª–æ–≤ –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ: {len(dataset)}")

    for i, (keypoints, labels) in enumerate(dataloader):
        print(f"\nüî¢ –ë–∞—Ç—á {i + 1}")
        print(f"Keypoints shape: {keypoints.shape}")  # (B, 60, 5, 17, 3)
        print(f"Labels: {labels}")                   # (B,) —Ç–µ–Ω–∑–æ—Ä –∏–∑ 0/1/2
        print(f"Unique labels in this batch: {labels.unique().tolist()}")

        if i == 1:  # –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ 2 –±–∞—Ç—á–∞
            break

    # –ü—Ä–∏–º–µ—Ä: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–¥–∏–Ω —Å—ç–º–ø–ª –Ω–∞–ø—Ä—è–º—É—é
    sample_kps, sample_label = dataset[0]
    print(f"\nüß™ –û–¥–∏–Ω —Å—ç–º–ø–ª:")
    print(f"Keypoints shape: {sample_kps.shape}")  # (60, 5, 17, 3)
    print(f"Label: {sample_label.item()}")

if __name__ == "__main__":
    main()
